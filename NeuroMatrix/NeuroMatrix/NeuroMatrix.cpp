#include <iostream>
#include <ctime>

#include "NeuronNet.h"

int main()
{
    srand(time(NULL));

    //Количество слоёв в нейронной сети
    int NLA = 4;
    //Количество нейронов в каждом слое
    int LNA[4];
    LNA[0] = 36;
    LNA[1] = 26;
    LNA[2] = 16;
    LNA[3] = 10;
    //Количество связей между слоями
    int CA[4];
    CA[0] = 900;
    CA[1] = 390;
    CA[2] = 160;
    CA[3] = 0;
    //Константа а и скорость обучаемости
    int a = 1;
    float speed = 0.8;
    //Цифры, хранящийеся в виде двумерных массивов (от 0 до 1)
    bool Number[11][7][5] = { {
       {0,1,1,1,0},
       {1,0,0,0,1},
       {1,0,0,0,1},
       {1,0,0,0,1}, //0
       {1,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0}
    },{
       {0,1,1,1,0},
       {1,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,1}, //9
       {0,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0} }
    ,{
       {0,1,1,1,0},
       {1,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0}, //8
       {1,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0} } 
    ,{
       {1,1,1,1,1},
       {0,0,0,0,1},
       {0,0,0,1,0},
       {0,0,1,0,0}, //7
       {0,1,0,0,0},
       {0,1,0,0,0},
       {0,1,0,0,0} } 
    ,{
       {0,1,1,1,0},
       {1,0,0,0,1},
       {1,0,0,0,0},
       {1,1,1,1,0}, //6
       {1,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0} } 
    ,{
       {1,1,1,1,1},
       {1,0,0,0,0},
       {1,1,1,1,0},
       {0,0,0,0,1}, //5
       {0,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0} } 
    ,{
       {0,0,1,1,0},
       {0,1,0,1,0},
       {1,0,0,1,0},
       {1,0,0,1,0}, //4
       {1,1,1,1,1},
       {0,0,0,1,0},
       {0,0,0,1,0} } 
    ,{
       {0,1,1,1,0},
       {1,0,0,0,1},
       {0,0,0,0,1},
       {0,0,1,1,0}, //3
       {0,0,0,0,1},
       {1,0,0,0,1},
       {0,1,1,1,0} } 
    ,{
       {0,1,1,1,0},
       {1,0,0,0,1},
       {0,0,0,0,1},
       {0,0,0,1,0}, //2
       {0,1,1,0,0},
       {1,0,0,0,0},
       {1,1,1,1,1} } 
    ,{
       {0,0,1,0,0},
       {0,1,1,0,0},
       {0,0,1,0,0},
       {0,0,1,0,0}, //1
       {0,0,1,0,0},
       {0,0,1,0,0},
       {0,1,1,1,0} },
    {
       {1,1,1,1,0},
       {0,0,0,1,0},
       {0,0,0,1,0},
       {0,0,0,1,0}, //своя цифра
       {0,0,1,0,0},
       {0,1,0,0,0},
       {0,1,1,1,1}
    } };
    
    //Желаемый результат для каждой цифры, используется для нахождения ошибки
    bool NumberWant[10][10] = { 
    { 0,0,0,0,0,0,0,0,0,1 } ,
    { 0,0,0,0,0,0,0,0,1,0 } , 
    { 0,0,0,0,0,0,0,1,0,0 } , 
    { 0,0,0,0,0,0,1,0,0,0 } , 
    { 0,0,0,0,0,1,0,0,0,0 } , 
    { 0,0,0,0,1,0,0,0,0,0 } , 
    { 0,0,0,1,0,0,0,0,0,0 } , 
    { 0,0,1,0,0,0,0,0,0,0 } , 
    { 0,1,0,0,0,0,0,0,0,0 } , 
    { 1,0,0,0,0,0,0,0,0,0 } , };
    
    //Задание сети
    NeuronNet MyNet(NLA, CA, a, speed, LNA);
    
    //Обучение сети, сети подается каждая цифра и подсчитывается ошибка
    for (int i = 0; i < 1000; i++)
    {
        //Подача данных во входной слой
        MyNet.InputStartData(Number[i%10]);
        //Подсчитывание значение каждого нейрона
        MyNet.CalcGeneration();
        //Смотрим величину ошибки и исправляем веса
        MyNet.CalcErrorDelta(NumberWant[i%10]);
    }

    //Вывод цифр для интерфейса
    int jjj = 0;
    while (jjj < 7)
    {
        for (int i = 0; i < 11; i++)
        {
            for (int k = 0; k < 5; k++)
            {
                if (Number[i][jjj][k]) std::cout << "#";
                else std::cout << " ";
            }
            std::cout << "\t";
        }
        std::cout << "\n";
        jjj++;
    }
    //Выбор цифры пользователем
    std::cout << "Select your number to recognize (index 1-11 from left to right):\n";
    int selectednumber;
    std::cin >> selectednumber;

    std::cout << "You picked:\n";

    for (int j = 0; j < 7; j++)
    {
        for (int k = 0; k < 5; k++)
        {
            if (Number[selectednumber-1][j][k]) std::cout << "#";
            else std::cout << " ";
        }
        std::cout << std::endl;
    }
    std::cout << std::endl;
    //Даём сети, выбранную пользователем, цифру
    MyNet.InputStartData(Number[selectednumber-1]);
    MyNet.CalcGeneration();
    //Вывод результата
    MyNet.WriteData();
    MyNet.OutputResult();
    
    int maxindexresult = 0;
    float max = 0;
    for (int jj = 9; jj >= 0; jj--)
    {
        if (MyNet.GetResultAtIndex(jj) > max)
        {
            maxindexresult = jj;
            max = MyNet.GetResultAtIndex(jj);
        }
    }
    std::cout << "\n You result = " << 10-maxindexresult << " = " << max << std::endl << std::endl;

    for (int j = 0; j < 7; j++)
    {
        for (int k = 0; k < 5; k++)
        {
            if (Number[9-maxindexresult][j][k]) std::cout << "#";
            else std::cout << " ";
        }
        std::cout << std::endl;
    }
    std::cout << std::endl;


    system("pause");

}
